#!/usr/bin/python
# -*- coding: utf-8 -*-
import json, requests, random, re
from pprint import pprint

from django.shortcuts import render,redirect
from django.http import HttpResponse
from django.views import generic
from django.views.decorators.csrf import csrf_exempt
from django.utils.decorators import method_decorator
from google import search
from bs4 import BeautifulSoup as BS 


# Create your views here.
PAGE_ACCESS_TOKEN = 'EAAIhB7QbAeEBAFh2I64mUSM1drxqcu3omQehZCkkULdZC4qZAFejedJaZBAFtTrKtVuUcyMLClisxyCNSZCN36AI5oJsJL5VWD0j0ZAsjmGlA9WfVA6cGZAYwzATz6x7h6Dl1YGxATKJrJa8gRURmzJ6fAuxjOOGqqcXKfkX8S1BQZDZD'
VERIFY_TOKEN = "vaibhavsharma"

GREETINGS = {"name":1,"nice":0,"ok":0,"thank":0,"how are you":2,"fine":3,"talk":4,"hi":5,"hey":5,"afternoon":6,"morning":7,"night":8,"hafiz":9,"doing":10,"pokemon":11,"are smart":12}
reply=["My Pleasure My Master","My name is Bijli ! Can answer all your tech question.","I am Fine my master. How are you ?","Okkay! if you need any help you just need to drop a message my master \n Khuda Hafiz! :)","Master you will only ask me tech questions","Hi :)","Good afternoon! My master :)","Good morning! My master","Good night! My master :)","khuda hafiz :)",">Sitting>Eating\n>Staring at the laptop screen\n>Typing\n>Breathing\n>Blinking\n>Thinking\nLol\nHow about you? ;) ","This might help you ! Made by my master :) http://enigmatic-basin-68757.herokuapp.com just give it a try . ","Thank you master ! this made my day :)"]

def post_facebook_message(fbid, received_message):
	print "fbid" , fbid
	if len(received_message) > 300 :
		received_message = received_message[:300]
	print received_message
	
	try:
		user_details_url = "https://graph.facebook.com/v2.6/%s"%fbid 
		user_details_params = {'fields':'first_name,last_name,profile_pic', 'access_token':PAGE_ACCESS_TOKEN}
		print "getting user details"
		user_details = requests.get(user_details_url, user_details_params).json()
		print "Using GET request"
		print "User details" , user_details
		answer = 'Best Answer for '+user_details['first_name']+' my Master! :'
		print answer
	except:
		print "Exception case for userdetails"
		answer = "Best Answer for my Master :"
		print answer

	print "makig a post url "
	post_message_url = 'https://graph.facebook.com/v2.6/me/messages?access_token=%s'%PAGE_ACCESS_TOKEN

	response_msg = json.dumps(
		{"recipient":{"id":fbid}, 
		"message":{
			"text": answer
					}
		})
    
	response_msg1 = json.dumps(
        {"recipient":{"id":fbid}, 
            "message":{
                "text": received_message
            }
     })
	try :
		print "Making A post request"
		status = requests.post(post_message_url, headers={"Content-Type": "application/json"},data=response_msg)
		status1 = requests.post(post_message_url, headers={"Content-Type": "application/json"},data=response_msg1)
		pprint(status.json())
		pprint(status1.json())
	except:
		print "Post request Not working"	
	
	
	
		


class fb(generic.View):
	def get(self, request, *args, **kwargs):
		if self.request.GET['hub.verify_token'] == VERIFY_TOKEN:
			return HttpResponse(self.request.GET['hub.challenge'])
		else:
			return HttpResponse('Error, invalid token')

	@method_decorator(csrf_exempt)
	def dispatch(self, request, *args, **kwargs):
		return generic.View.dispatch(self, request, *args, **kwargs)

	def post(self, request, *args, **kwargs):
		incoming_message = json.loads(self.request.body.decode('utf-8'))
		for entry in incoming_message['entry']:
		 	for message in entry['messaging']:
		 		if 'message' in message:
		 			pprint(message)
		 			try:
		 				chat(message['sender']['id'], message['message']['text'])
		 			except:
		 				print "function not working"
		return HttpResponse()


def chat(fbid,message):
	flag = 1 
	for name in GREETINGS.keys():
		if name in message.lower() :
			flag = 0
			post_facebook_message(fbid,reply[GREETINGS[name]])
			return None

	if flag == 1 :
		soverflowurl = "http://stackoverflow.com"
		for url in search(message.encode('utf8')):
			flag = flag + 1
			if flag > 10 :
				break
			print url
			if "http://stackoverflow.com/" in url:
				print "entered"
				soverflowurl = url
				break 
			else :
				continue	

		try:
			print "Try"
			r = requests.get(soverflowurl).text
			page = BS(r,"html.parser")
			answer = page.find_all("div",class_ = "accepted-answer")
			answer = answer[0].find_all("div",class_ = "post-text")
			print "Post request made"
			post_facebook_message(fbid,answer[0].text)
			print answer[0].text
		except IndexError:
			try:
				print "Index error"
				r = requests.get(soverflowurl).text
				page = BS(r,"html.parser")
				answer = page.find_all("div",id="answers")
				answer = answer[0].find_all("div",class_="answer")
				answer = answer[0].find_all("div",class_="post-text")
				print "index error post request made"
				post_facebook_message(fbid,answer[0].text)
				print answer[0].text
			except:
				print "Extreme exception"
				post_facebook_message(fbid,"Try giving me the exact problem! My master!")	
	
def main(request):
	return render(request,"fb_echobot/base.html",{"data":None})	